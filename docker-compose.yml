services:

  auth-db:
    image: postgres:15
    container_name: auth-db
    restart: always
    env_file:
      - ./auth-service/.db.env
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - app-network

  auth-service:
    build: ./auth-service
    restart: on-failure
    ports:
    - "5001:5001"
    expose:
      - "5001"
    volumes:
      - ./auth-service:/app
      - /app/node_modules
    env_file:
      - ./auth-service/.env
    depends_on:
      - auth-db
    networks:
      - app-network

  products-db:
    image: postgres:15
    container_name: products-db
    restart: always
    env_file:
      - ./products-service/.db.env
    volumes:
      - products-db-data:/var/lib/postgresql/data
    networks:
      - app-network
  
  products-service:
    build: ./products-service
    restart: on-failure
    ports: 
      - "5002:5002"
    volumes:
      - ./products-service:/app
      - /app/node_modules   
    depends_on:
      - products-db
    env_file:
      - ./products-service/.env
    networks:
      - app-network

  orders-db:
    image: postgres:15
    container_name: orders-db
    restart: always
    env_file:
      - ./orders-service/.db.env
    volumes:
      - orders-db-data:/var/lib/postgresql/data
    networks:
      - app-network
  
  orders-service:
    build: ./orders-service
    restart: on-failure
    ports:
    - "5003:5003"
    expose:
      - "5003"
    volumes:
      - ./orders-service:/app
      - /app/node_modules
    env_file:
      - ./orders-service/.env
    depends_on:
      - orders-db
    networks:
      - app-network
  
  payment-service:
    build: ./payment-service
    restart: on-failure
    ports:
    - "5004:5004"
    expose:
      - "5004"
    volumes:
      - ./payment-service:/app
    env_file:
      - ./payment-service/.env
    # depends_on:
    #   - payment-db
    networks:
      - app-network

  # payment-db:
  #   image: postgres:15
  #   container_name: payment-db
  #   restart: always
  #   env_file:
  #     - ./payment-service/.db.env
  #   volumes:
  #     - payment-db-data:/var/lib/postgresql/data
  #   networks:
  #     - app-network

  frontend:
    build: ./frontend
    restart: on-failure
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./frontend/.docker.env
    networks:
      - app-network

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network 

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3001"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_HTTP_PORT=3001 
    depends_on:
      - prometheus
    networks:
      - app-network 

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - orders-service
    networks:
      - app-network 

volumes:
  auth-db-data:
  products-db-data:
  orders-db-data:
  payment-db-data:

networks:
  app-network:
    driver: bridge