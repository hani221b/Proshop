// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id                Int              @id @default(autoincrement())
  userId            Int
  orderItems        OrderItem[]
  shippingAddress   ShippingAddress  @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId Int              @unique
  paymentMethod     String
  paymentResult     PaymentResult?   @relation(fields: [paymentResultId], references: [id])
  paymentResultId   Int?             @unique
  itemPrice         Float
  taxPrice          Float
  shippingPrice     Float
  totalPrice        Float
  isPaid            Boolean
  paidAt            DateTime?
  isDelivered       Boolean
  deliveredAt       DateTime?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
}

model OrderItem {
  id        Int    @id @default(autoincrement())
  orderId   Int
  order     Order  @relation(fields: [orderId], references: [id])
  name      String
  qty       Int
  image     String
  productId Int
}

model ShippingAddress {
  id         Int     @id @default(autoincrement())
  address    String
  city       String
  postalCode String
  country    String
  order      Order?
}

model PaymentResult {
  id           Int     @id @default(autoincrement())
  status       String?
  updateTime   String?
  emailAddress String?
  order        Order?
}